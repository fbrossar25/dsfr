////
/// Table Module
/// @group Table
////

@use 'module/color';

@mixin _table-scheme($legacy: false) {
  #{ns(table)} {
    &__wrapper {
      @include before {
        @include color.box-shadow(contrast grey, (legacy:$legacy), top-1-in left-1-in bottom-1-in right-1-in);
      }
    }

    &__content {
      table {
        #{ns(cell)} {
          &--info {
            @include color.text(default info, (legacy: $legacy));
          }

          &--error {
            @include color.text(default error, (legacy: $legacy));
          }

          &--success {
            @include color.text(default success, (legacy: $legacy));
          }

          &--warning {
            @include color.text(default warning, (legacy: $legacy));
          }
        }

        thead {
          #{ns(cell)} {
            &--info {
              @include color.background(contrast info, (legacy: $legacy));
            }

            &--error {
              @include color.background(contrast error, (legacy: $legacy));
            }

            &--success {
              @include color.background(contrast success, (legacy: $legacy));
            }

            &--warning {
              @include color.background(contrast warning, (legacy: $legacy));
            }
          }

          th {
            @include color.background(alt grey, (legacy: $legacy));
            @include color.background-image((border plain grey) (border contrast grey), (legacy: $legacy));

            &:last-child {
              @include color.background(alt grey, (legacy: $legacy));
              @include color.background-image((border plain grey), (legacy: $legacy));
            }
          }
        }

        tbody {
          #{ns(cell)} {
            &--info {
              @include color.background(alt info, (legacy: $legacy));
            }

            &--error {
              @include color.background(alt error, (legacy: $legacy));
            }

            &--success {
              @include color.background(alt success, (legacy: $legacy));
            }

            &--warning {
              @include color.background(alt warning, (legacy: $legacy));
            }
          }

          tr {
            &[aria-selected=true] {
              &::after {
                @include color.background-image((border action-high blue-france) (border action-high blue-france) (border action-high blue-france) (border action-high blue-france), (legacy: $legacy));
              }
            }
          }

          th,
          td {
            @include color.background-image((border contrast grey) (border contrast grey), (legacy: $legacy));
            @include color.background(default grey, (legacy: $legacy));
          }

          th {
            @include color.background(alt grey, (legacy: $legacy));
            @include color.background-image((border contrast grey) (border contrast grey), (legacy: $legacy));
          }
        }
      }
    }

    &__shadow--left {
      #{ns(table__content)} {
        #{ns(cell--fixed)} {
          @include color.background-image((border contrast grey) (border plain grey), (legacy: $legacy));

          &[scope='col'] {
            @include color.background-image((border plain grey) (border plain grey), (legacy: $legacy));
          }
        }

        thead {
          #{ns(cell--fixed)} {
            @include color.background-image((border plain grey) (border plain grey), (legacy: $legacy));
          }
        }
      }
    }

    &__detail {
      @include color.text(mention grey, (legacy:$legacy));
    }
  }
}
